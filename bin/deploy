#!/usr/bin/env ruby

require "json"

MAX_CONCURRENCY = 20
S3_BUCKET = "charlieegan3-www-website-content"

WEBSITE_CONFIG = <<-JSON
{
    "IndexDocument": {
        "Suffix": "index.html"
    },
    "ErrorDocument": {
        "Key": "error.html"
    },
    "RoutingRules": [
    ]
}
JSON

def print_section(title, should_print_first_new_line=true)
  puts "\n" if should_print_first_new_line
  puts "-" * 100
  puts title
  puts "-" * 100
end

start_time = Time.now

print_section("Syncing Bucket", false)
puts `aws s3 sync --delete www s3://#{S3_BUCKET}`

print_section("Configuring pages")
index_files = `find www`
  .split("\n")
  .select { |f| f.include? "index.html" }
  .delete_if { |f| f == "www/index.html" }
  .map { |f| f.gsub("www/", "") }

index_files.each do |index_file|
  fork do
    object_name = index_file.split("/")[0]

    puts `aws s3 cp s3://#{S3_BUCKET}/#{index_file} s3://#{S3_BUCKET}/#{object_name} --content-type text/html`

    puts `aws s3api copy-object --bucket #{S3_BUCKET} --copy-source #{S3_BUCKET}/#{index_file} --key #{index_file} --website-redirect-location /#{object_name}`.split("\n").join(" ")
    puts `aws s3api copy-object --bucket #{S3_BUCKET} --copy-source #{S3_BUCKET}/#{index_file} --key #{index_file.gsub("/index.html", ".html")} --website-redirect-location /#{object_name}`.split("\n").join(" ")
  end
end
Process.waitall

print_section("Configuring blog")
blog_files = `find www/blog`
  .split("\n")
  .select { |f| f.include? ".html" }
  .delete_if { |f| f == "www/blog/index.html" }
  .map { |f| f.gsub("www/", "") }

blog_files.each_slice(MAX_CONCURRENCY).each do |blog_file_group|
  blog_file_group.each do |blog_file|
    fork do
      file_name = blog_file.split("/").last
      object_name = blog_file.gsub(file_name, file_name.gsub(".html", ""))

      puts `aws s3 cp s3://#{S3_BUCKET}/#{blog_file} s3://#{S3_BUCKET}/#{object_name} --content-type text/html`
      puts `aws s3api copy-object --bucket #{S3_BUCKET} --copy-source #{S3_BUCKET}/#{blog_file} --key #{blog_file} --website-redirect-location /#{blog_file.gsub(".html", "")}`.split("\n").join(" ")
      puts `aws s3api copy-object --bucket #{S3_BUCKET} --copy-source #{S3_BUCKET}/#{blog_file} --key #{blog_file.gsub(".html", "/index.html")} --website-redirect-location /#{blog_file.gsub(".html", "")}`.split("\n").join(" ")
    end
  end
  Process.waitall
end

print_section("Setting cache headers")
puts `aws s3 cp --recursive s3://#{S3_BUCKET}/ s3://#{S3_BUCKET}/ --exclude "*" --include "*.css" --include "*application-*.js" --include "*.jpg" --include "*.png" --cache-control 'max-age=31104000' --metadata-directive REPLACE`

print_section("Finished")
puts "#{Time.now - start_time} seconds"
